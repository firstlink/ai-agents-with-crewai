from crewai import Agent, Crew, Process, Task
from crewai.project import CrewBase, agent, crew, task
from src.tools import zapproxy

@CrewBase
class PennTestAgentCrew():
    """Penn TEst crew class"""

    agents_config = "config/penn_test_agents.yaml"
    tasks_config = "config/penn_test_tasks.yaml"

    @agent
    def penn_test_planner(self) -> Agent:
        return Agent(
            config=self.agents_config['penn_tester_planner'],
            tools=[
                zapproxy.zap_general_use
            ],
            verbose=True,
            allow_delegation=False,
        )

    @task
    def cybersecurity_research_task(self) -> Task:
        return Task(
            config=self.tasks_config['web_security_vulnerability_scan'],
            agent=self.penn_test_planner()
        )

    @crew
    def crew(self) -> Crew:
        return Crew(
            agents=self.agents,  # Automatically created by the @agent decorator
            tasks=self.tasks,  # Automatically created by the @task decorator
            process=Process.sequential,
            verbose=True,
            memory=True,
        )


from src.penn_test_crew_agent import PennTestAgentCrew

if __name__ == "__main__":
    result = PennTestAgentCrew().crew().kickoff()
    print(result)